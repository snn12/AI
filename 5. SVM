# Gerekli kütüphanelerin yüklenmesi
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Örnek veri seti oluşturulması
np.random.seed(0)
X, y = np.random.randn(1000, 2), np.random.choice([0, 1], 1000)

# Veriyi eğitim ve test setlerine ayırma
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Modeli oluşturma ve eğitme
model = SVC(kernel='linear')
model.fit(X_train, y_train)

# Test seti üzerinde tahmin yapma
y_pred = model.predict(X_test)

# Model performansını değerlendirme
classification_rep = classification_report(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)

print("Sınıflandırma Raporu:\n", classification_rep)
print("Karışıklık Matrisi:\n", conf_matrix)
print("Doğruluk Skoru: ", accuracy)

# Eğitim verisinin görselleştirilmesi
plt.figure(figsize=(10, 6))
plt.scatter(X_train[y_train == 0][:, 0], X_train[y_train == 0][:, 1], color='red', label='Class 0')
plt.scatter(X_train[y_train == 1][:, 0], X_train[y_train == 1][:, 1], color='blue', label='Class 1')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Eğitim Verisi')
plt.legend()
plt.show()    

# Test verisinin görselleştirilmesi
plt.figure(figsize=(10, 6))
plt.scatter(X_test[y_test == 0][:, 0], X_test[y_test == 0][:, 1], color='red', label='Class 0')
plt.scatter(X_test[y_test == 1][:, 0], X_test[y_test == 1][:, 1], color='blue', label='Class 1')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Test Verisi')
plt.legend()
plt.show()

# Model tahminlerinin görselleştirilmesi
plt.figure(figsize=(10, 6))
plt.scatter(X_test[y_pred == 0][:, 0], X_test[y_pred == 0][:, 1], color='red', label='Predicted Class 0')
plt.scatter(X_test[y_pred == 1][:, 0], X_test[y_pred == 1][:, 1], color='blue', label='Predicted Class 1')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Model Tahminleri')
plt.legend()
plt.show()
