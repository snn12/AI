# K-means iteratively finds groups (clusters) where points within a group are close together, and groups themselves are further apart.

import numpy as np
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Sample Data (representing e.g., customer purchases)
data = np.array([
    [2, 10], [2, 5], [8, 4],
    [5, 8], [7, 5], [6, 4],
    [1, 2], [4, 9]
])

# Create the K-Means model
kmeans = KMeans(n_clusters=2)  # We'll assume 2 customer groups

# Train the model (Find clusters)
kmeans.fit(data)

# Get cluster assignments for each point
labels = kmeans.labels_
print("Cluster assignments:", labels)

# Get cluster centers
centroids = kmeans.cluster_centers_
print("Cluster centers:", centroids)

# Visualization
plt.scatter(data[:, 0], data[:, 1], c=labels)  # Color based on cluster
plt.scatter(centroids[:, 0], centroids[:, 1], marker='*', s=200, c='red')  # Mark centroids
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.title("K-Means Clustering Example")
plt.show()
