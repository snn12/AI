import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.neural_network import BernoulliRBM
from sklearn.pipeline import Pipeline
from sklearn.base import clone
from sklearn import linear_model
from sklearn import datasets 

digits = datasets.load_digits()
X = np.asarray(digits.data, 'float32')
print(X)
X = (X - np.min(X, 0)) / (np.max(X, 0) + 0.0001)
print(X)

rbm = BernoulliRBM(n_components = 64, learning_rate = 0.01, n_iter = 20, random_state =0)

logistic = linear_model.LogisticRegression(max_iter = 1000, solver = ' lbfgs' , multi_class= ' multinominal')

calssifier = Pipeline(steps=[('rbm' , rbm) , 'logistic', logistic])
